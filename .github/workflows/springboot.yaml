name: springboot Build & Deploy in Web App

on:
  push:
    branches:
      - none
    paths:
      - 'springboot/**'    # Monitor changes in 'springboot' folder
  workflow_dispatch:
    inputs:
      appname:
        description: 'The Azure Web App name for deployment'
        required: true
        type: string

permissions:
  id-token: write  # Grants permission to request an ID token for Azure login
  contents: read   # Grants permission to read the repository contentss

jobs:
  build-springboot-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java version
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'microsoft'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Simulating SonarQube preparation and analysis for Spring Boot
      - name: Prepare SonarQube Analysis
        run: |
          echo "Simulating SonarQube Preparation..."
          sleep 10  # Simulate preparation for SonarQube analysis

      - name: Run SonarQube Analysis
        run: |
          echo "Simulating SonarQube Analysis..."
          sleep 10  # Simulate SonarQube analysis

      - name: Build with Maven
        run: mvn clean install -f springboot/pom.xml

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: java-app
          path: '${{ github.workspace }}/springboot/target/*.jar'

  deploy-springboot-app-dev:
    runs-on: ubuntu-latest
    needs: build-springboot-app
    if: ${{ always() }}  # This ensures it always runs after the build job.
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp-dev.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: java-app

      - name: Setup Azure Login using Service Principal
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App (Dev)
        id: deploy-to-webapp-dev
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ github.event.inputs.appname }}
          slot-name: 'Production'
          package: '*.jar'  # Path to the generated JAR file
          publish-profile: ${{ secrets.AzureAppService_PublishProfile_33ac0071b75a41149831c060e302057b }}

      - name: Validate Deployment (Dev)
        run: |
          curl -s --head --request GET https://${{ github.event.inputs.appname }}.azurewebsites.net/ || exit 1

      - name: Rollback in case of failure (Dev)
        if: failure()
        run: |
          echo "Rolling back to the previous version in Development slot."
          az webapp deployment slot swap --name ${{ github.event.inputs.appname }} --slot Production --target-slot Development --resource-group <your-resource-group>

  deploy-springboot-app-staging:
    runs-on: ubuntu-latest
    needs: deploy-springboot-app-dev
    if: ${{ success() }}
    environment:
      name: 'Staging'
      url: ${{ steps.deploy-to-webapp-staging.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: java-app

      - name: Setup Azure Login using Service Principal
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App (Staging)
        id: deploy-to-webapp-staging
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ github.event.inputs.appname }}-staging
          slot-name: 'Staging'
          package: '*.jar'  # Path to the generated JAR file
          publish-profile: ${{ secrets.AzureAppService_PublishProfile_a924dda677174242986fe24120677f9c }}

      - name: Validate Deployment (Staging)
        run: |
          curl -s --head --request GET https://$${{ github.event.inputs.appname }}-staging.azurewebsites.net/ || exit 1

      - name: Rollback in case of failure (Staging)
        if: failure()
        run: |
          echo "Rolling back to the previous version in Staging slot."
          az webapp deployment slot swap --name ${{ github.event.inputs.appname }} --slot Staging --target-slot Production --resource-group <your-resource-group>

  deploy-springboot-app-production:
    runs-on: ubuntu-latest
    needs: deploy-springboot-app-staging
    if: ${{ success() }}
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp-production.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: java-app

      - name: Setup Azure Login using Service Principal
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App (Production)
        id: deploy-to-webapp-production
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ github.event.inputs.appname }}-prod
          slot-name: 'Production'
          package: '*.jar'  # Path to the generated JAR file
          publish-profile: ${{ secrets.AzureAppService_PublishProfile_a924dda677174242986fe24120677f9c }}

      - name: Validate Deployment (Production)
        run: |
          curl -s --head --request GET https://$${{ github.event.inputs.appname }}-prod.azurewebsites.net/ || exit 1

      - name: Rollback in case of failure (Production)
        if: failure()
        run: |
          echo "Rolling back to the previous version in Production slot."
          az webapp deployment slot swap --name ${{ github.event.inputs.appname }} --slot Production --target-slot Development --resource-group <your-resource-group>
